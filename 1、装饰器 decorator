#   1、装饰器本质上是一个python函数，它可以让其他函数在不需要做任何代码变动的前提下增加额外功能，
        装饰器的返回值也是一个函数对象，装饰器的本质是函数，主要用来装饰其他函数，也就是为其他函数添加附加功能
    2、装饰器的原则:
        (1) 装饰器不能修改被装饰的函数的源代码
        (2) 装饰器不能修改被装饰的函数的调用方式
————————————————

#计算函数执行时间的装饰器

import time

def decorator(func):
    def wrapper():                                  # 函数无参数，装饰器也无参数
        t1 = time.time()
        func()
        t2 = time.time()
        print('函数执行的时间为:%.2f秒'%(t2-t1))
    return wrapper

@decorator                                          # 语法糖装饰模式
def functest1():
    print('这是定义的第一个函数...')
    time.sleep(0.3)
    
@decorator
def functest2():
    print('这是定义的第二个函数...')
    time.sleep(0.4)
    
functest1()
functest2()
